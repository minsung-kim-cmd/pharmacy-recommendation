<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8">
    <title>Pharmacy Recommendation System</title>

    <!--부트스트랩 css 추가-->
    <link rel="stylesheet" href="/css/lib/bootstrap.min.css">
    <script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=0cb446dffd61ffb1bc67e0f2470be7f7&libraries=services"></script>
</head>
<style>
    .dp-none{display:none;}

    .mb10{margin-bottom:10px;}
    .mt10{margin-top:10px;}
    .mr10{margin-right:10px;}
    .ml10{margin-left:10px;}

    .custom-map{
        width:600px;
        height:500px;
    }

    .loadingDiv{
        display: flex;
        align-items: center;
        height: 100%;
        justify-content: space-evenly;
    }

    table th {text-align: center;}
</style>
<body>
<div>
    <div>
        <div class="container" style="margin-top: 20px;">
            <div>
                <h2>약국 추천 서비스</h2>
            </div>
            <div class="body mb10">
                <div class="mb10">
                    <label>주소를 입력하시면 주소 기준으로 가까운 약국의 위치 최대 3곳 추천드립니다.</label>
                </div>
                <div style="display: flex; align-items: center;">
                    <div>
                        <input type="text" class="form-control" id="address" placeholder="주소(지번 또는 도로명)를 입력하세요." onclick="input_address_click()" readonly style="width: 530px;margin-right: 10px;"/>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary" id="btn-save" style="width:60px;" onclick="searchPharmacy()">검색</button>
                    </div>
                </div>
            </div>
            <div class="mb10" style="display:flex;">
                <div style="width: 600px;height: 500px;">
                    <div id="loading" class="loadingDiv" style="display: none;">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                    <div id="map" class="custom-map"></div>
                </div>
                <div id="searchListDiv" class="mb10 ml10 dp-none">
                    <table class="table table-hover" id="searchListTable">
                        <thead>
                        <tr>
                            <th>약국 명</th>
                            <th>약국 주소</th>
                            <th>거리</th>
                            <th>링크</th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            {{> footer}}
        </div>
    </div>
</div>

<div id="layer" style="display:none;position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;">
    <img src="//t1.daumcdn.net/postcode/resource/images/close.png" id="btnCloseLayer" style="cursor:pointer;position:absolute;right:-3px;top:-3px;z-index:1" onclick="closeDaumPostcode()" alt="닫기 버튼">
</div>

<!--부트스트랩 js, jquery 추가-->
<script src="/js/lib/jquery.min.js"></script>
<script src="/js/lib/bootstrap.min.js"></script>
<!-- Kakao 우편번호 서비스 -->
<!-- https://postcode.map.daum.net/guide -->
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>

<script>
    var pharmacyList = []; //추천 약국 목록
    var searchAddrLatlng;
    const mapContainer = document.getElementById('map');    // 지도를 표시할 div
    const loadingElement = document.getElementById('loading');  //로딩 스피너를 표시할 div
    const geocoder = new kakao.maps.services.Geocoder();    // 주소-좌표 변환 객체를 생성합니다
    var lat = 33.450701, lon = 126.570667;  // 기본값으로 설정한 위치
    var map;  // 전역 변수로 선언하여 다른 함수에서도 접근 가능

    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다
    if (navigator.geolocation) {
        // 로딩 스피너 표시
        loadingElement.style.display = 'flex'; // 로딩 스피너 표시

        // GeoLocation을 이용해서 접속 위치를 얻어옵니다
        navigator.geolocation.getCurrentPosition(function(position) {
            lat = position.coords.latitude;  // 위도
            lon = position.coords.longitude; // 경도

            // 위치 정보를 얻은 후에 지도를 생성하고 마커를 표시합니다
            initializeMap(lat, lon);

            // 로딩 스피너를 숨기고 지도를 표시
            loadingElement.style.display = 'none';
            mapContainer.style.display = 'block';  // 지도를 표시
        }, function(error) {
            // 위치 정보를 가져오지 못한 경우 기본 좌표로 지도를 생성
            console.error("Geolocation error: ", error);
            initializeMap(lat, lon);
            // 로딩 스피너를 숨기고 기본 지도를 표시
            loadingElement.style.display = 'none';
            mapContainer.style.display = 'block';  // 지도를 표시
        });
    } else {
        // Geolocation을 사용할 수 없는 경우 기본 위치로 지도를 표시합니다
        initializeMap(lat, lon);

        // 로딩 스피너를 숨기고 지도를 표시
        loadingElement.style.display = 'none';
        mapContainer.style.display = 'block';  // 지도를 표시
    }

    // 지도를 초기화하는 함수
    function initializeMap(lat, lon) {
        const mapOption = {
            center: new kakao.maps.LatLng(lat, lon), // 지도의 중심좌표
            level: 3 // 지도의 확대 레벨
        };
        map = new kakao.maps.Map(mapContainer, mapOption);  // 지도를 생성하고 전역변수 map에 할당
        displayMarker(new kakao.maps.LatLng(lat, lon));  // 마커 표시
    }

    // 지도에 마커를 표시하는 함수입니다
    function displayMarker(locPosition) {

        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({
            map: map,
            position: locPosition
        });

        // 지도 중심좌표를 접속위치로 변경합니다
        map.setCenter(locPosition);
    }

    //주소 선택시 해당 주소로 지도 이동 및 마커 표시
    function placesSearch(address){
        // 주소로 좌표를 검색합니다
        geocoder.addressSearch(address, function(result, status) {
            // 정상적으로 검색이 완료됐으면
            if (status === kakao.maps.services.Status.OK) {

                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
                searchAddrLatlng = coords;

                // 결과값으로 받은 위치를 마커로 표시합니다
                var marker = new kakao.maps.Marker({
                    map: map,
                    position: coords
                });

                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
                map.setCenter(coords);
            }
        });
    }

    // 주소 기준 가까운 약국 추천 리스트업
    function searchPharmacy(){
        const input_address = document.getElementById("address").value;
        if(input_address == ''){
            alert("주소를 입력해주세요.");
            return;
        }

        $.ajax({
            type : 'post',
            url : '/search',
            async : false,
            data : {"address" : input_address },
            success : function(result) {
                var html = '';
                if(result.length == 0){
                    html = '<tr><td rowspan="4"> 검색된 데이터가 없습니다.</td></tr>';

                }
                pharmacyList = result;
                var positions =[];
                result.forEach(function (el, index){
                    positions.push({title:el.pharmacyName,latlng: new kakao.maps.LatLng(el.latitude, el.longitude)});
                    html += '<tr><td>'+el.pharmacyName+'</td><td>'+el.pharmacyAddress+'</td><td>'+el.distance+'</td>'
                            +'<td><button type="button" class="mr10 btn btn-secondary" id="direction_'+index+'" onclick="movePage(this.id)">길찾기</button>'
                            +'<button type="button" class="btn btn-secondary" id="road_'+index+'" onclick="movePage(this.id)">로드뷰</button></td></tr>';
                });

                $('#searchListTable tbody').append(html);
                $('#searchListDiv').removeClass('dp-none');

                if(positions.length >0)
                    addPharmacyMark(positions);
            },
            error : function(request, status, error) {
                console.log(error)
            }
        });

    }

    //길찾기, 로드뷰 링크 이동
    function movePage (id){
        var type = id.split('_')[0];
        var index = Number(id.split('_')[1]);
        var openNewWindow = window.open("about:blank");
        if(type == 'road')
            openNewWindow.location.href = pharmacyList[index].roadViewUrl;
        else
            openNewWindow.location.href = pharmacyList[index].directionUrl;

    }

    // 검색 클릭 시 추천 받은 약국 마커 표시
    function addPharmacyMark(positions){
        // 마커 이미지의 이미지 주소입니다
        var imageSrc = "https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png";

        // LatLngBounds 객체 생성 (마커들의 좌표를 모두 포함하는 영역을 계산하기 위함)
        var bounds = new kakao.maps.LatLngBounds();

        //검색한 위치 추가
        bounds.extend(searchAddrLatlng);
        for (var i = 0; i < positions.length; i ++) {
            // 마커 이미지의 이미지 크기입니다
            var imageSize = new kakao.maps.Size(24, 35);

            // 마커 이미지를 생성합니다
            var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);

            // 마커를 생성합니다
            var marker = new kakao.maps.Marker({
                map: map, // 마커를 표시할 지도
                position: positions[i].latlng, // 마커를 표시할 위치
                title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
                image : markerImage // 마커 이미지
            });

            // 현재 마커의 위치를 LatLngBounds 객체에 추가
            bounds.extend(positions[i].latlng);
        }

        // 범위가 설정된 LatLngBounds 객체를 기준으로 지도 레벨 조정
        map.setBounds(bounds);
    }


     // 우편번호 찾기 화면을 넣을 element
    var element_layer = document.getElementById('layer');

    function closeDaumPostcode() {
        // iframe을 넣은 element를 안보이게 한다.
        element_layer.style.display = 'none';
    }

    //주소 검색 시작
    function input_address_click() {
        new daum.Postcode({
            oncomplete: function(data) {
                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    addr = data.roadAddress;
                    if(data.buildingName != ''){ //도로명 주소에 건물명이 포함된 경우
                        addr += ' ('+data.buildingName+')';
                    }
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 주소 정보를 해당 필드에 넣는다.
                document.getElementById("address").value = addr;

                // iframe을 넣은 element를 안보이게 한다.
                // (autoClose:false 기능을 이용한다면, 아래 코드를 제거해야 화면에서 사라지지 않는다.)
                element_layer.style.display = 'none';

                placesSearch(data.address);
            },
            width : '100%',
            height : '100%',
            maxSuggestItems : 5
        }).embed(element_layer);

        // iframe을 넣은 element를 보이게 한다.
        element_layer.style.display = 'block';

        // iframe을 넣은 element의 위치를 화면의 가운데로 이동시킨다.
        initLayerPosition();
    }

    // 브라우저의 크기 변경에 따라 레이어를 가운데로 이동시키고자 하실때에는
    // resize이벤트나, orientationchange이벤트를 이용하여 값이 변경될때마다 아래 함수를 실행 시켜 주시거나,
    // 직접 element_layer의 top,left값을 수정해 주시면 됩니다.
    function initLayerPosition(){
        var width = 500; //우편번호서비스가 들어갈 element의 width
        var height = 550; //우편번호서비스가 들어갈 element의 height
        var borderWidth = 2; //샘플에서 사용하는 border의 두께

        // 위에서 선언한 값들을 실제 element에 넣는다.
        element_layer.style.width = width + 'px';
        element_layer.style.height = height + 'px';
        element_layer.style.border = borderWidth + 'px solid';
        // 실행되는 순간의 화면 너비와 높이 값을 가져와서 중앙에 뜰 수 있도록 위치를 계산한다.
        element_layer.style.left = (((window.innerWidth || document.documentElement.clientWidth) - width)/2 - borderWidth) + 'px';
        element_layer.style.top = (((window.innerHeight || document.documentElement.clientHeight) - height)/2 - borderWidth) + 'px';
    }
</script>

</body>
</html>